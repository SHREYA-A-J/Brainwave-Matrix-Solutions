-- create_tables.sql
//Drop in order to avoid FK conflicts
DROP TABLE IF EXISTS Payments;
DROP TABLE IF EXISTS OrderDetails;
DROP TABLE IF EXISTS Orders;
DROP TABLE IF EXISTS Products;
DROP TABLE IF EXISTS Customers;

 1) Customers
CREATE TABLE Customers (
  CustomerID INT PRIMARY KEY AUTO_INCREMENT,
  CustomerName VARCHAR(100) NOT NULL,
  Email VARCHAR(100) UNIQUE NOT NULL,
  Phone VARCHAR(20),
  Address VARCHAR(255),
  JoinDate DATETIME DEFAULT CURRENT_TIMESTAMP
) ENGINE=InnoDB;

 2) Products
CREATE TABLE Products (
  ProductID INT PRIMARY KEY AUTO_INCREMENT,
  ProductName VARCHAR(150) NOT NULL,
  Category VARCHAR(80),
  Price DECIMAL(10,2) NOT NULL,
  Stock INT NOT NULL DEFAULT 0,
  INDEX idx_productname (ProductName)
) ENGINE=InnoDB;

 3) Orders
CREATE TABLE Orders (
  OrderID INT PRIMARY KEY AUTO_INCREMENT,
  CustomerID INT,
  OrderDate DATETIME DEFAULT CURRENT_TIMESTAMP,
  Status VARCHAR(50) DEFAULT 'Pending',
  FOREIGN KEY (CustomerID) REFERENCES Customers(CustomerID)
    ON DELETE SET NULL ON UPDATE CASCADE
) ENGINE=InnoDB;

 4) OrderDetails (many-to-many)
CREATE TABLE OrderDetails (
  OrderDetailID INT PRIMARY KEY AUTO_INCREMENT,
  OrderID INT,
  ProductID INT,
  Quantity INT NOT NULL,
  FOREIGN KEY (OrderID) REFERENCES Orders(OrderID)
    ON DELETE CASCADE ON UPDATE CASCADE,
  FOREIGN KEY (ProductID) REFERENCES Products(ProductID)
    ON DELETE RESTRICT ON UPDATE CASCADE
) ENGINE=InnoDB;

 5) Payments
CREATE TABLE Payments (
  PaymentID INT PRIMARY KEY AUTO_INCREMENT,
  OrderID INT,
  PaymentDate DATETIME DEFAULT CURRENT_TIMESTAMP,
  Amount DECIMAL(12,2) NOT NULL,
  Method VARCHAR(50),
  FOREIGN KEY (OrderID) REFERENCES Orders(OrderID)
    ON DELETE CASCADE ON UPDATE CASCADE
) ENGINE=InnoDB;
